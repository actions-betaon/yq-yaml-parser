name: Continuous Integration

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
      - feature/v1

permissions:
  contents: read

jobs:
  test-docker:
    name: Docker Tests
    runs-on: ubuntu-latest

    # Run a local registry to push to
    services:
      registry:
        image: registry:2
        ports:
          - 5001:5000

    env:
      TEST_TAG: localhost:5001/actions/yq-yaml-parser-action:latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Setup Docker BuildX
        id: setup-buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver-opts: network=host

      - name: Build the Container
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.TEST_TAG }}

      - name: Run the Container
        id: run
        env:          
          INPUT_YAML_FILE_PATH: ./yq-test.yml          
        run: |
          docker run \
            --workdir /github/workspace \
            --volume "${{ github.workspace }}":/github/workspace \
            --volume "${{ runner.temp }}/_runner_file_commands":${{ runner.temp }}/_runner_file_commands \
            --env GITHUB_OUTPUT="$GITHUB_OUTPUT" \
            --env INPUT_YAML_FILE_PATH="${{ env.INPUT_YAML_FILE_PATH }}" \
            --rm ${{ env.TEST_TAG }}

      - name: Print Output
        id: output
        run: echo "${{ steps.run.outputs.time }}"            

  test-action:
    name: GitHub Actions Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Test Local Action
        id: test-action
        uses: ./
        with:          
          file-path: ./yq-test.yml

      # - name: Print Outputs
      #   id: outputs
      #   run: echo "${{ toJson(steps.test-action.outputs) }}"

      - name: Test Multiline Output
        id: test-output-multiline
        #shell: bash
        run: |
          test_name="Test Multiline Output"
          echo "${{ steps.test-action.outputs.app-build_multiline }}"
          output_result="${{ steps.test-action.outputs.app-build_multiline }}"

          output_result_content=$"Output Result:\n $output_result"
          printf "%s\n" "$output_result_content"

          printf "%s\n" "$output_result_content" >> $GITHUB_STEP_SUMMARY          